@use "./variables" as *;
@use 'sass:math';

@mixin limitLine($lines) {
  & {
    display: -webkit-box;
    line-clamp: $lines;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

@mixin minWidth($min-width) {
  @media only screen and (min-width: $min-width) {
    @content;
  }
}

@mixin maxWidth($max-width) {
  @media only screen and (max-width: $max-width) {
    @content;
  }
}

@mixin resFont($min-size, $max-size, $important: false) {
  $font-size: #{$max-size}rem;

  @if $important {
    $font-size: #{$max-size}rem !important;
  }

  & {
    font-size: $font-size;
  }

  @include maxWidth($lg) {
    $font-size: calc(#{$max-size}rem - ((#{$max-size}rem - #{$min-size}rem)) / 2);

    @if $important {
      $font-size: calc(#{$max-size}rem - ((#{$max-size}rem - #{$min-size}rem)) / 2) !important;
    }

    & {
      font-size: $font-size;
    }
  }

  @include maxWidth($sm) {
    $font-size: #{$min-size}rem;

    @if $important {
      $font-size: #{$min-size}rem !important;
    }

    & {
      font-size: $font-size;
    }
  }
}

@mixin breakText {
  & {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-all;
    word-break: break-word;
    hyphens: auto;
    -ms-word-break: break-all;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
  }
}

@mixin aspectRatio($ratio: 16/9) {
  height: 0;
  padding-bottom: math.div(100%, $ratio);
  
  @supports (aspect-ratio: 16/9) {
    aspect-ratio: $ratio;
    height: initial;
    padding-bottom: initial;
  }
}

@mixin transition {
  & {
    transition: all 0.25s ease-in-out 0s;
    -moz-transition: all 0.25s ease-in-out 0s;
    -o-transition: all 0.25s ease-in-out 0s;
    -webkit-transition: all 0.25s ease-in-out 0s;
    -ms-transition: all 0.25s ease-in-out 0s;
  }
}